function saveData()
{
   PMSettings.write();  
}

//==============================================================================
// Enigne Build Data Management
//==============================================================================
function incrementEngineBuildCount()
{
   %currentBuildCount = PMSettings.value("EngineBuilds/NumBuilds", "0");
   %currentBuildCount++;
   
   PMSettings.setValue("EngineBuilds/NumBuilds", %currentBuildCount);
   
   return %currentBuildCount;
}

function getEngineBuildCount()
{
   %buildCount = PMSettings.value("EngineBuilds/NumBuilds", "0");
   return %buildCount;
}

function findEngineBuildByName(%name)
{
   %buildCount = getEngineBuildCount();
   if(%buildCount == 0)
      return 0;
   
   for(%i=1; %i <= %buildCount; %i++)
   {
      if(PMSettings.value("EngineBuilds/" @ %i @ "/buildName", "") $= %name)
         return %i;
   }
   
   return 0;
}

function getEngineBuild(%index)
{
   %buildCount = getEngineBuildCount();
   if(%index < 0 || %index > %buildCount)
      return 0;
      
   %bld = new ScriptObject();
   %bld.buildId = %index;
   %bld.buildName = PMSettings.value("EngineBuilds/" @ %index @ "/buildName", "");
   %bld.gitPath = PMSettings.value("EngineBuilds/" @ %index @ "/gitPath", "");
   %bld.branchName = PMSettings.value("EngineBuilds/" @ %index @ "/branchName", "");
   %bld.localPath = PMSettings.value("EngineBuilds/" @ %index @ "/localPath", "");
   %bld.isDefault = PMSettings.value("EngineBuilds/" @ %index @ "/isDefault", "");
   %bld.isBinary = PMSettings.value("EngineBuilds/" @ %index @ "/isBinary", "");
   %bld.tags = PMSettings.value("EngineBuilds/" @ %index @ "/tags", "");
   
   return %bld;
}

function saveEngineBuild(%build)
{
   %index = %build.buildId;
   
   %buildCount = getEngineBuildCount();
   if(%index < 0 || %index > %buildCount)
      return 0;
   
   PMSettings.setValue("EngineBuilds/" @ %index @ "/buildName", %build.buildName);
   PMSettings.setValue("EngineBuilds/" @ %index @ "/gitPath", %build.gitPath);
   PMSettings.setValue("EngineBuilds/" @ %index @ "/branchName", %build.branchName);
   PMSettings.setValue("EngineBuilds/" @ %index @ "/localPath", %build.localPath);
   PMSettings.setValue("EngineBuilds/" @ %index @ "/isDefault", %build.isDefault);
   PMSettings.setValue("EngineBuilds/" @ %index @ "/isBinary", %build.isBinary);
   PMSettings.setValue("EngineBuilds/" @ %index @ "/tags", %build.tags);
   
   saveData();
}

function setupDefaultEngineBuilds()
{
   if(findEngineBuildByName("Torque 3D 4.0 Preview Source") == 0)
   {
      %buildId = incrementEngineBuildCount();
      
      %bld = new ScriptObject();
      %bld.buildId = %buildId;
      %bld.buildName = "Torque 3D 4.0 Preview Source";
      %bld.gitPath = "https://github.com/TorqueGameEngines/Torque3D";
      %bld.branchName = "Preview4_0";
      %bld.localPath = "";
      %bld.isDefault = 1;
      %bld.isBinary = 0;

      saveEngineBuild(%bld);
   }

   if(findEngineBuildByName("Torque 3D 4.0 Preview Binaries") == 0)
   {
      %buildId = incrementEngineBuildCount();
      
      %bld = new ScriptObject();
      %bld.buildId = %buildId;
      %bld.buildName = "Torque 3D 4.0 Preview Binaries";
      %bld.gitPath = "https://github.com/TorqueGameEngines/Torque3D-Binaries";
      %bld.branchName = "Torque3D_win_20220409";
      %bld.localPath = "";
      %bld.isDefault = 1;
      %bld.isBinary = 1;

      saveEngineBuild(%bld);
   }
}

function getEngineBuildDownloadPath()
{
   %downloadPath = PMSettings.value("Settings/EngineBuilds/downloadPath", "{ManagerDir}/EngineBuilds/");
   
   %downloadPath = strreplace(%downloadPath, "{ManagerDir}", getMainDotCsDir());
   return %downloadPath;
}

function getEngineBuildTags(%index)
{
   %bld = getEngineBuild(%index);
   
   if(!isObject(%bld))
      return "";
   
   %tags = %bld.tags;
   
   %tokenCount = getTokenCount(%tags, ",;");
   
   if(%bld.isBinary)
   {
      if(%tokenCount == 0)
         %tags = "Binary";
      else
         %tags = %tags @ ",Binary";
      
      %tokenCount++;
   }
   else
   {
      if(%tokenCount == 0)
         %tags = "Source";
      else
         %tags = %tags @ ",Source";
         
      %tokenCount++;
   }
   
   if(%bld.isDefault)
   {
      if(%tokenCount == 0)
         %tags = "Default";
      else
         %tags = %tags @ ",Default";
         
      %tokenCount++;
   }
   
   if(%bld.hasWindowsBinary !$= "")
   {
      if(%tokenCount == 0)
         %tags = "Windows";
      else
         %tags = %tags @ ",Windows";
         
      %tokenCount++;
   }
   
   if(%bld.hasLinuxBinary !$= "")
   {
      if(%tokenCount == 0)
         %tags = "Linux";
      else
         %tags = %tags @ ",Linux";
         
      %tokenCount++;
   }
   
   if(%bld.hasMacOSBinary !$= "")
   {
      if(%tokenCount == 0)
         %tags = "macAppName";
      else
         %tags = %tags @ ",macAppName";
         
      %tokenCount++;
   }
   
   return %tags;
}

//==============================================================================
// Module Data Management
//==============================================================================
function incrementModuleCount()
{
   %currentCount = PMSettings.value("Modules/NumModules", "0");
   %currentCount++;
   
   PMSettings.setValue("Modules/NumModules", %currentCount);
   
   return %currentCount;
}

function getModuleCount()
{
   %currentCount = PMSettings.value("Modules/NumModules", "0");
   
   return %currentCount;
}

function findModuleByName(%name)
{
   %buildCount = getModuleCount();
   if(%buildCount == 0)
      return 0;
   
   for(%i=1; %i <= %buildCount; %i++)
   {
      if(PMSettings.value("Modules/" @ %i @ "/moduleName", "") $= %name)
         return %i;
   }
   
   return 0;
}

function getModule(%index)
{
   %count = getModuleCount();
   if(%index < 0 || %index > %count)
      return 0;
      
   %module = new ScriptObject();
   %module.moduleId = %index;
   %module.moduleName = PMSettings.value("Modules/" @ %index @ "/moduleName", "");
   %module.gitPath = PMSettings.value("Modules/" @ %index @ "/gitPath", "");
   %module.branchName = PMSettings.value("Modules/" @ %index @ "/branchName", "");
   %module.localPath = PMSettings.value("Modules/" @ %index @ "/localPath", "");
   %module.isDefault = PMSettings.value("Modules/" @ %index @ "/isDefault", "");
   %module.dependencies = PMSettings.value("Modules/" @ %index @ "/dependencies", "");
   %module.installInNewProj = PMSettings.value("Modules/" @ %index @ "/installInNewProj", "");
   %module.tags = PMSettings.value("Modules/" @ %index @ "/tags", "");
   
   return %module;
}

function saveModule(%build)
{
   %index = %build.moduleId;
   
   %buildCount = getModuleCount();
   if(%index < 0 || %index > %buildCount)
      return 0;
   
   PMSettings.setValue("Modules/" @ %index @ "/moduleName", %build.moduleName);
   PMSettings.setValue("Modules/" @ %index @ "/gitPath", %build.gitPath);
   PMSettings.setValue("Modules/" @ %index @ "/branchName", %build.branchName);
   PMSettings.setValue("Modules/" @ %index @ "/localPath", %build.localPath);
   PMSettings.setValue("Modules/" @ %index @ "/isDefault", %build.isDefault);
   PMSettings.setValue("Modules/" @ %index @ "/dependencies", %build.dependencies);
   PMSettings.setValue("Modules/" @ %index @ "/installInNewProj", %build.installInNewProj);
   PMSettings.setValue("Modules/" @ %index @ "/tags", %build.tags);
   
   saveData();
}

function setupDefaultModules()
{
   if(findModuleByName("Action-Adventure Kit") == 0)
   {
      %moduleId = incrementModuleCount();
      
      %module = new ScriptObject();
      %module.moduleId = %moduleId;
      %module.moduleName = "Action-Adventure Kit";
      %module.gitPath = "https://github.com/Torque3DResources/AAK";
      %module.branchName = "";
      %module.localPath = "";
      %module.isDefault = 1;
      %module.dependencies = "";
      %module.installInNewProj = false;
      %module.tags = "Requires Engine Changes;Has Source Files";

      saveModule(%module);
   }
   
   if(findModuleByName("FPS Gameplay") == 0)
   {
      %moduleId = incrementModuleCount();
      
      %module = new ScriptObject();
      %module.moduleId = %moduleId;
      %module.moduleName = "FPS Gameplay";
      %module.gitPath = "https://github.com/Torque3DResources/FPSGameplay";
      %module.branchName = "";
      %module.localPath = "";
      %module.isDefault = 1;
      %module.dependencies = "FPSEquipment;FPSPlayer;inventorySystem;";
      %module.installInNewProj = false;
      %module.tags = "";

      saveModule(%module);
   }
}

function getModuleTags(%index)
{
   %module = getModule(%index);
   %tags = %module.tags;
   %installStatus = %module.installInNewProj;
   %isDefault = %module.isDefault;
   
   %tokenCount = getTokenCount(%tags, ",;");
   
   if(%installStatus)
   {
      if(%tokenCount == 0)
         %tags = "Install in New Projects";
      else
         %tags = %tags @ ",Install in New Projects";
      
      %tokenCount++;
   }
   
   if(%isDefault)
   {
      if(%tokenCount == 0)
         %tags = "Default";
      else
         %tags = %tags @ ",Default";
         
      %tokenCount++;
   }
   
   return %tags;
}

//==============================================================================
// Project Data Management
//==============================================================================
function incrementProjectCount()
{
   %currentProjectCount = PMSettings.value("Projects/NumProjects", "0");
   %currentProjectCount++;
   
   PMSettings.setValue("Projects/NumProjects", %currentProjectCount);
   
   return %currentProjectCount;
}

function getProjectCount()
{
   %count = PMSettings.value("Projects/NumProjects", "0");
   return %count;
}

function findProjectByName(%name)
{
   %count = getProjectCount();
   if(%count == 0)
      return -1;
   
   for(%i=1; %i <= %count; %i++)
   {
      if(PMSettings.value("Projects/" @ %i @ "/projectName", "") $= %name)
         return %i;
   }
   
   return -1;
}

function getProject(%index)
{
   %count = getProjectCount();
   if(%index < 0 || %index > %count)
      return 0;
      
   %project = new ScriptObject();
   %project.projectId = %index;
   %project.projectName = PMSettings.value("Projects/" @ %index @ "/projectName", "");
   %project.buildPath = PMSettings.value("Projects/" @ %index @ "/buildPath", "");
   %project.localPath = PMSettings.value("Projects/" @ %index @ "/localPath", "");
   %project.previewImage = PMSettings.value("Projects/" @ %index @ "/previewImage", "");
   %project.engineBuildId = PMSettings.value("Projects/" @ %index @ "/engineBuildId", "");
   %project.generatorName = PMSettings.value("Projects/" @ %index @ "/generatorName", "");
   %project.enableD3D = PMSettings.value("Projects/" @ %index @ "/enableD3D", "");
   %project.enableOpenGL = PMSettings.value("Projects/" @ %index @ "/enableOpenGL", "");
   %project.enablePhysX = PMSettings.value("Projects/" @ %index @ "/enablePhysX", "");
   %project.enableBullet = PMSettings.value("Projects/" @ %index @ "/enableBullet", "");
   %project.enableSQLite = PMSettings.value("Projects/" @ %index @ "/enableSQLite", "");
   
   return %project;
}

function saveProject(%project)
{
   %index = %project.projectId;
   
   %count = getProjectCount();
   if(%index < 0 || %index > %count)
      return 0;
   
   PMSettings.setValue("Projects/" @ %index @ "/projectName", %project.projectName);
   PMSettings.setValue("Projects/" @ %index @ "/projectId", %project.projectId);
   PMSettings.setValue("Projects/" @ %index @ "/buildPath", %project.buildPath);
   PMSettings.setValue("Projects/" @ %index @ "/localPath", %project.localPath);
   PMSettings.setValue("Projects/" @ %index @ "/previewImage", %project.previewImage);
   PMSettings.setValue("Projects/" @ %index @ "/engineBuildId", %project.engineBuildId);
   PMSettings.setValue("Projects/" @ %index @ "/generatorName", %project.generatorName);
   PMSettings.setValue("Projects/" @ %index @ "/enableD3D", %project.enableD3D);
   PMSettings.setValue("Projects/" @ %index @ "/enableOpenGL", %project.enableOpenGL);
   PMSettings.setValue("Projects/" @ %index @ "/enablePhysX", %project.enablePhysX);
   PMSettings.setValue("Projects/" @ %index @ "/enableBullet", %project.enableBullet);
   PMSettings.setValue("Projects/" @ %index @ "/enableSQLite", %project.enableSQLite);
   
   saveData();
}